/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package monad.jni;

public class SyncNoSQL extends NoSQLSupport {
    private long swigCPtr;

    protected SyncNoSQL(long cPtr, boolean cMemoryOwn) {
        super(CMonadJNI.SyncNoSQL_SWIGUpcast(cPtr), cMemoryOwn);
        swigCPtr = cPtr;
    }

    public SyncNoSQL(String db_path, NoSQLOptions options) {
        this(CMonadJNI.new_SyncNoSQL(db_path, NoSQLOptions.getCPtr(options), options), true);
    }

    protected static long getCPtr(SyncNoSQL obj) {
        return (obj == null) ? 0 : obj.swigCPtr;
    }

    protected void finalize() {
        delete();
    }

    public synchronized void delete() {
        if (swigCPtr != 0) {
            if (swigCMemOwn) {
                swigCMemOwn = false;
                CMonadJNI.delete_SyncNoSQL(swigCPtr);
            }
            swigCPtr = 0;
        }
        super.delete();
    }

    public void SetSyncIdNoSQL(SyncIdNoSQL sync_id_server) {
        CMonadJNI.SyncNoSQL_SetSyncIdNoSQL(swigCPtr, this, SyncIdNoSQL.getCPtr(sync_id_server), sync_id_server);
    }

    public int FindRegionMaxDataSeq(short region_id) {
        return CMonadJNI.SyncNoSQL_FindRegionMaxDataSeq(swigCPtr, this, region_id);
    }

    public int FindRegionMaxIdSeq(short region_id) {
        return CMonadJNI.SyncNoSQL_FindRegionMaxIdSeq(swigCPtr, this, region_id);
    }

    public long FindRegionMaxTransSeq(short region_id) {
        return CMonadJNI.SyncNoSQL_FindRegionMaxTransSeq(swigCPtr, this, region_id);
    }

    public byte[] GetRegionDataInfo() {
        return CMonadJNI.SyncNoSQL_GetRegionDataInfo(swigCPtr, this);
    }

    public StatusType Del(byte[] key) {
        return StatusType.swigToEnum(CMonadJNI.SyncNoSQL_Del(swigCPtr, this, key));
    }

    public StatusType UpdateDataTimestamp(long timestamp) {
        return StatusType.swigToEnum(CMonadJNI.SyncNoSQL_UpdateDataTimestamp(swigCPtr, this, timestamp));
    }

    public void AddRegion(short region_id, long weight) {
        CMonadJNI.SyncNoSQL_AddRegion(swigCPtr, this, region_id, weight);
    }

    public void RemoveRegion(short region_id) {
        CMonadJNI.SyncNoSQL_RemoveRegion(swigCPtr, this, region_id);
    }

    public byte[] FindNextBinlog(short region_id, long seq) {
        return CMonadJNI.SyncNoSQL_FindNextBinlog(swigCPtr, this, region_id, seq);
    }

    public void DeleteRegionBinlog(short region_id, long end_seq) {
        CMonadJNI.SyncNoSQL_DeleteRegionBinlog(swigCPtr, this, region_id, end_seq);
    }

    public StatusType Put2(byte[] key, byte[] value, long timestamp, byte[] id) {
        return StatusType.swigToEnum(CMonadJNI.SyncNoSQL_Put2(swigCPtr, this, key, value, timestamp, id));
    }

}
